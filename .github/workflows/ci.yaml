name: Build, Test and Scan

on:
  push:
    branches:
    - develop
    - feature/**
    - release/**

jobs:
  env-check-dev:
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - run: echo "DEV IMAGE_NAME = ${{ vars.IMAGE_NAME }}" && echo "DEV IMAGE_URL = ${{ vars.IMAGE_URL }}"

  env-check-uat:
    environment: uat
    runs-on: ubuntu-latest
    steps:
      - run: echo "UAT IMAGE_NAME = ${{ vars.IMAGE_NAME }}" && echo "UAT IMAGE_URL = ${{ vars.IMAGE_URL }}"

  pre-deploy:
    needs: [env-check-dev, env-check-uat]
    runs-on: ubuntu-latest
    steps:
      - run: echo "This job is automatically triggered by a ${{ github.event_name }} event."

  install-dependencies:
    runs-on: ubuntu-latest
    needs: [pre-deploy]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies commands
        run: npm install

  # Perform first level package scanning using npm audit.
  # npm audit information can be found here:
  # https://docs.npmjs.com/cli/v9/commands/npm-audit

  package-scan-npm-audit:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies commands
        run: npm install
      - name: Run audit
        run: npm audit

  # We will use Snyk to perform open source code scanning of our JavaScript files
  # Ensure that you have registered for a Snyk account
  # Grab the API key from your username > API Key
  # Insert the API key in Github Actions Secret called "SNYK_TOKEN"
  
  package-osc-scan-snyk-scan:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  # We will also use Snyk to perform application code scanning 

  package-app-scan-snyk-scan:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Run Snyk Code Scan And Check Snyk Scan Results
        run: snyk code test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build-and-test-image:
    runs-on: ubuntu-latest
    outputs: 
        image-name: ${{ steps.docker-build.outputs.image-name }}
    needs: [package-scan-npm-audit, package-osc-scan-snyk-scan, package-app-scan-snyk-scan]
    steps:
        - name: Run docker build
          id: docker-build
          run: |
            echo "image-name=node-js-application" >> "$GITHUB_OUTPUT"
            docker build -t node-js-application .
        
        - name: Print docker image name
          run: |
            echo "Image name is ${{ steps.docker-build.outputs.image-name }}"

        - name: Scan docker image
          id: docker-scout
          uses: docker/scout-action@main
          with:
            command: cves
            image: ${{ steps.docker-build.outputs.image-name }}
            only-severities: critical,high
            exit-code: true

        - name: Publish docker to ECR
          run: |
            echo "Simulating docker push"
            echo "docker tag ${{ steps.docker-build.outputs.image-name }}:v1.1 ecr-endpoint.com/${{ steps.docker-build.outputs.image-name }}:v1.1
            echo "docker push ecr-endpoint.com/${{ steps.docker-build.outputs.image-name }}:v1.1"

  deploy-image-dev:
    needs: [build-and-test-image]
    name: "Deployed image to dev"
    uses: luqmannnn/github-actions-env-selection/.github/workflows/cd.yaml@main
    with:
        target_env: "dev"
        version: "v1.1"
    secrets: inherit
    if: ${{ github.ref_name == 'main' || github.ref_name == 'develop' || startsWith(github.ref_name, 'feature/') }}

  deploy-image-uat:
    needs: [build-and-test-image]
    name: "Deployed image to uat"
    uses: luqmannnn/github-actions-env-selection/.github/workflows/cd.yaml@main
    with:
        target_env: "uat"
        version: "v1.1"
    secrets: inherit
    if: ${{ startsWith(github.ref_name, 'release/') }}

  deploy-image-prod:
    needs: [build-and-test-image, deploy-image-uat]
    name: "Deployed image to prod"
    uses: luqmannnn/github-actions-env-selection/.github/workflows/cd.yaml@main
    with:
        target_env: "prod"
        version: "v1.1"
    secrets: inherit
    if: ${{ startsWith(github.ref_name, 'release/') }}