name: Build, Test and Scan

on:
  push:
    tags:
    - 'v*'
    branches:
    - develop
    - feature/**
    - release/**
    - main

jobs:
  env-check-dev:
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "DEV IMAGE_NAME = ${{ vars.IMAGE_NAME }}"
          echo "DEV IMAGE_URL = ${{ vars.IMAGE_URL }}"
          echo "DEV USER_GROUP = ${{ vars.USER_GROUP }}"
          echo "DEV REGION = ${{ vars.REGION }}"

  env-check-uat:
    environment: uat
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "UAT IMAGE_NAME = ${{ vars.IMAGE_NAME }}"
          echo "UAT IMAGE_URL = ${{ vars.IMAGE_URL }}"
          echo "UAT USER_GROUP = ${{ vars.USER_GROUP }}"
          echo "UAT REGION = ${{ vars.REGION }}"

  env-check-qa:
    environment: qa
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "QA IMAGE_NAME = ${{ vars.IMAGE_NAME }}"
          echo "QA IMAGE_URL = ${{ vars.IMAGE_URL }}"
          echo "QA USER_GROUP = ${{ vars.USER_GROUP }}"
          echo "QA REGION = ${{ vars.REGION }}"

  env-check-prod:
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "PROD IMAGE_NAME = ${{ vars.IMAGE_NAME }}"
          echo "PROD IMAGE_URL = ${{ vars.IMAGE_URL }}"
          echo "PROD USER_GROUP = ${{ vars.USER_GROUP }}"
          echo "PROD REGION = ${{ vars.REGION }}"

  pre-deploy:
    needs: [env-check-dev, env-check-uat, env-check-qa, env-check-prod]
    runs-on: ubuntu-latest
    steps:
      - run: echo "This job is automatically triggered by a ${{ github.event_name }} event."

  # Perform first level package scanning using npm audit.
  # npm audit information can be found here:
  # https://docs.npmjs.com/cli/v9/commands/npm-audit

  check-tag:
    runs-on: ubuntu-latest
    needs: pre-deploy
    outputs:
      LATEST_TAG: ${{ steps.get_latest_tag.outputs.LATEST_TAG }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Fetch All Tags
        run: git fetch --tags

      - name: Get Latest Tag
        id: get_latest_tag
        run: | 
          echo "LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)" >> "$GITHUB_OUTPUT"
          echo "LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)"

      - name: Output Latest Tag
        run: echo "The latest tag is ${{ steps.get_latest_tag.outputs.LATEST_TAG }}"

  print-tag:
    runs-on: ubuntu-latest
    needs: check-tag
    steps:
      - name: Docker tag
        run: |
          echo "docker build -t my-application:${{ needs.check-tag.outputs.LATEST_TAG }}"

  