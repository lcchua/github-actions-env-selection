on:
  push:
    branches:
    - develop
    - feature/**
    - release/**

jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "This job is automatically triggered by a ${{ github.event_name }} event."

  install-dependencies:
    runs-on: ubuntu-latest
    needs: [pre-deploy]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies commands
        run: npm install

  # Perform first level package scanning using npm audit.
  # npm audit information can be found here:
  # https://docs.npmjs.com/cli/v9/commands/npm-audit

  package-scan-npm-audit:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies commands
        run: npm install
      - name: Run audit
        run: npm audit

  # We will use Snyk to perform open source code scanning of our JavaScript files
  # Ensure that you have registered for a Snyk account
  # Grab the API key from your username > API Key
  # Insert the API key in Github Actions Secret called "SNYK_TOKEN"
  
  package-osc-scan-snyk-scan:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  # We will also use Snyk to perform application code scanning 

  package-app-scan-snyk-scan:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Run Snyk Code Scan And Check Snyk Scan Results
        run: snyk code test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # We will also use Snyk to perform code scanning of our Terraform IAC files

  package-iac-scan-snyk-scan:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install Snyk CLI
        run: npm install -g snyk
      - name: Run Snyk Code Scan And Check Snyk Scan Results
        uses: snyk/actions/iac@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: "--report --severity-threshold=high --scan=resource-changes"

  deploy-terraform-dev:
    needs: [package-scan-npm-audit, package-osc-scan-snyk-scan, package-app-scan-snyk-scan, package-iac-scan-snyk-scan]
    name: "Create and delete dev terraform"
    uses: luqmannnn/github-actions-env-selection/.github/workflows/env-select.yaml@main
    with:
        env: "dev"
    secrets: inherit
    if: ${{ github.ref_name == 'main' || github.ref_name == 'develop' || startsWith(github.ref_name, 'feature/') }}

  deploy-terraform-uat:
    needs: [package-scan-npm-audit, package-osc-scan-snyk-scan, package-app-scan-snyk-scan, package-iac-scan-snyk-scan]
    name: "Create and delete uat terraform"
    uses: luqmannnn/github-actions-env-selection/.github/workflows/env-select.yaml@main
    with:
        env: "uat"
    secrets: inherit
    if: ${{ startsWith(github.ref_name, 'release/') }}

  deploy-terraform-prod:
    needs: [package-scan-npm-audit, package-osc-scan-snyk-scan, package-app-scan-snyk-scan, package-iac-scan-snyk-scan, deploy-terraform-uat]
    name: "Create and delete prod terraform"
    uses: luqmannnn/github-actions-env-selection/.github/workflows/env-select.yaml@main
    with:
        env: "prod"
    secrets: inherit
    if: ${{ startsWith(github.ref_name, 'release/') }}